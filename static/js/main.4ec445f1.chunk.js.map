{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","isFormSubmitted","name","value","label","placeholder","required","onChange","useState","Math","random","toFixed","slice","id","touched","setTouched","hasError","trim","htmlFor","type","classNames","event","target","onBlur","NewMovie","onAdd","setTitle","setDescription","setImgUrl","setImdbUrl","setImdbId","count","setIsFormSubmitted","pattern","RegExp","source","isValidUrl","url","test","onSubmit","e","preventDefault","newValue","disabled","onClick","App","moviesFromServer","setMovies","newMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4ec445f1.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\ntype Props = {\n  isFormSubmitted: boolean,\n  name: string,\n  value: string,\n  label?: string,\n  placeholder?: string,\n  required?: boolean,\n  onChange?: (newValue: string) => void,\n};\n\nfunction getRandomDigits() {\n  return Math.random()\n    .toFixed(16)\n    .slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  isFormSubmitted,\n  name,\n  value,\n  label = name,\n  placeholder = `Enter ${label}`,\n  required = false,\n  onChange = () => {},\n}) => {\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n  const [touched, setTouched] = useState(false);\n  const hasError = touched && required\n    && (!isFormSubmitted && (!value || value.trim() === ''));\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          type=\"text\"\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError,\n          })}\n          placeholder={placeholder}\n          value={value}\n          onChange={event => onChange(event.target.value)}\n          onBlur={() => setTouched(true)}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport { TextField } from '../TextField';\n\ntype Movie = {\n  title: string;\n  description: string;\n  imgUrl: string;\n  imdbUrl: string;\n  imdbId: string;\n};\n\ntype NewMovieProps = {\n  onAdd: (newMovie: Movie) => void;\n};\n\nexport const NewMovie = ({ onAdd }: NewMovieProps) => {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [imgUrl, setImgUrl] = useState('');\n  const [imdbUrl, setImdbUrl] = useState('');\n  const [imdbId, setImdbId] = useState('');\n  const [count] = useState(0);\n  const [isFormSubmitted, setIsFormSubmitted] = useState(false);\n  // eslint-disable-next-line max-len\n  const pattern = new RegExp(\n    /(?:(https?|ftp):)?\\/\\//.source\n    + /(?:([^:\\n\\r]+):([^@\\n\\r]+)@)?/.source\n    + /(?:www\\.)?([^/\\n\\r]+)\\//.source\n    + /(\\/[^?\\n\\r]+)?/.source\n    + /(\\?[^#\\n\\r]*)?/.source\n    + /(#[^\\n\\r]*)?/.source,\n  );\n\n  const isValidUrl = (url: string) => pattern.test(url);\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    if (!title || !isValidUrl(imgUrl) || !isValidUrl(imdbUrl) || !imdbId) {\n      setIsFormSubmitted(true);\n\n      return;\n    }\n\n    const newMovie = {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    };\n\n    onAdd(newMovie);\n\n    setTitle('');\n    setDescription('');\n    setImgUrl('');\n    setImdbUrl('');\n    setImdbId('');\n  };\n\n  return (\n    <form className=\"NewMovie\" key={count} onSubmit={handleSubmit}>\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        isFormSubmitted={isFormSubmitted}\n        name=\"title\"\n        label=\"Title\"\n        value={title}\n        onChange={newValue => setTitle(newValue)}\n        required\n      />\n\n      <TextField\n        isFormSubmitted={isFormSubmitted}\n        name=\"description\"\n        label=\"Description\"\n        value={description}\n        onChange={newValue => setDescription(newValue)}\n      />\n\n      <TextField\n        isFormSubmitted={isFormSubmitted}\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={imgUrl}\n        onChange={newValue => setImgUrl(newValue)}\n        required\n      />\n\n      <TextField\n        isFormSubmitted={isFormSubmitted}\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={imdbUrl}\n        onChange={newValue => setImdbUrl(newValue)}\n        required\n      />\n\n      <TextField\n        isFormSubmitted={isFormSubmitted}\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={imdbId}\n        onChange={newValue => setImdbId(newValue)}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={!title || !imgUrl || !imdbUrl || !imdbId}\n            onClick={() => setIsFormSubmitted(true)}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\ntype Movie = {\n  title: string;\n  description: string;\n  imgUrl: string;\n  imdbUrl: string;\n  imdbId: string;\n};\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([...moviesFromServer]);\n\n  const handleAddMovie = (newMovie: Movie) => {\n    setMovies([...movies, newMovie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={handleAddMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}